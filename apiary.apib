FORMAT: 1A
HOST: https://ec.int.bqws.io/

# EC (v1.0)
EC is an electronic commerce service.

# Group Product

## Create [/v1.0/product]

This enpoint allow to create product info. 


### Create new product [POST]
Header response Location: http://ec.int.bqreaders.com/v1.0/product/{newId}

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|422   |invalid_entity|JSON doesn't correspond to Product or is empty|

+ Request (application/json)

    + Headers

            Authorization : Bearer {token}                  

    + Body                                 

            {
                "price": 1,
                "currency" : "eur",
                "href" : "resource uri",
                "type" : "FromApiary"
            }
        
+ Response 201
       

## Read update and delete [/v1.0/product/{id}]

This enpoint allow to read, update and delete product info. 
    

### Get Product [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|404   |not_found|When product not exist.|

 
+ Request

    + Headers

            Authorization : Bearer {token}                  
        
+ Response 200 (application/json)

    + Body                                 

            {
                "id": "{productIDParameter}",
                "price": 1,
                "currency": "eur",
                "href": "resource uri",
                "type": "FromApiary"
            }

### Update Product [PUT]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|404   |not_found|When product not exist.|
|422   |invalid_entity|JSON doesn't correspond to Product or is empty|
 
+ Request (application/json)
    + Headers

            Authorization : Bearer {token}                  

    + Body
    
            {
                "price": 2,
                "currency" : "dol",
                "href" : "2 resource uri"
            }
        
+ Response 204 



### Remove a Product [DELETE]
+ Request
    + Headers

            Authorization: Bearer {token}   
            Content-Length: 0

+ Response 204


# Group Order
API for start and administrate user orders

## Create [/v1.0/order]
### Create a new Order [POST]
Header response Location: http://ec.int.bqreaders.com/v1.0/order/{newId}

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|400|bad_request|Order request bad formed|
|403  |fobidden|If the access_token is not associated with any user|
+ Request (application/json)
    + Headers

            Authorization : Bearer {token}                  

    + Body
    
            { "items":[{"productId":"productId1", "amount" : 1, "price": {"amount":10, "currency":"EUR"}}] }

+ Response 201
            

## Read update and delete [/v1.0/order/{id}]
A single Order object


### Retrieve a Order [GET]
###Errors###
|Status|Error|Description|
|------|-----|-----------|
|404  |not_found|Order not found|
|403  |fobidden|If the access_token is not associated with any user|

+ Request
    + Headers

            Authorization : Bearer {token}    
            
+ Response 200 (application/json)

        {"id": "{orderIDParameter}", "items":[{"productId":"productId1", "amount" : 1, "price": {"amount":10, "currency":"EUR"}}]}

### Update a Order [PUT]
###Errors###
|Status|Error|Description|
|------|-----|-----------|
|400|bad_request|Order request bad formed|
|404  |not_found|Order not found|
|403  |fobidden|If the access_token is not associated with any user|

+ Request (application/json)
    + Headers

            Authorization : Bearer {token}                  

    + Body
    
            {"items": [{"productId":"productId1", "amount" : 1, "price": {"amount":10, "currency":"EUR"}}, {"productId":"productId2", "amount" : 2, "price": {"amount":20, "currency":"GBP"}}]}
    
+ Response 204

### Remove a Order [DELETE]
+ Request
    + Headers

            Authorization: Bearer {token}   
            Content-Length: 0

+ Response 204

## Checkout order [/v1.0/order/{id}/checkout]
Checkout a order and generate a purchase asyncronously. Returns in Location header a link to the new purchase.

### Checkaut order [POST]
###Errors###
|Status|Error|Description|
|------|-----|-----------|
|400|bad_request|Not payment methods selected|
|404  |not_found|Order not found|
|403  |fobidden|If the access_token is not associated with any user|

+ Request (application/json)
    + Headers

            Authorization : Bearer {token}                  

    + Body
    
            {
            "paymentMethodsIds": ["banckPaymentMethod1", "banckPaymentMethod2", "giftPaymentMethod"],
            "discountIds": ["discount1", "discount2"]
            }
    
+ Response 202
    + Headers
    
            Location: http://ec.int.bqreaders.com/v1.0/purchase/{newId}

# Group Purchase
API for view user purchase history

## Get purchases for the logged user [/v1.0/purchase]
Get purchases paginated

### Retrieve the purchases [GET]

###Parameters###
|Name|Description|Type|Default|Required
|----|-----------|----|:-----:|:------:|
|api:pageSize|Number of result returned in the page|Integer > 0|10||
|api:page|The page to be returned. Pages are zero-indexed|Integer >= 0|0||

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|403  |fobidden|If the access_token is not associated with any user|

+ Request
    + Headers

            Authorization : Bearer {token}    
            
+ Response 200 (application/json)

        [{"id": "purchase1"}, {"id": "purchase2"}]


