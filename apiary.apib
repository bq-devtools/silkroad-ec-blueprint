FORMAT: 1A
HOST: https://ec.int.bqws.io/

# EC (v1.0)
EC is an electronic commerce service.

# Group Product

## Create [/v1.0/product]

This enpoint allow to create product info. 


### Create new product [POST]
Header response Location: http://ec.int.bqreaders.com/v1.0/product/{newId}

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|422   |invalid_entity|JSON doesn't correspond to Product or is empty|

+ Request (application/json)

    + Headers

            Authorization : Bearer {token}                  

    + Body                                 

            {
                "price": 1,
                "currency" : "eur",
                "href" : "resource uri",
                "type" : "FromApiary"
            }
        
+ Response 201
       

## Read update and delete [/v1.0/product/{productIDParameter}]

This enpoint allow to read, update and delete product info. 

+ Parameters
    + productIDParameter (required, number, `324231`) ... Numeric `id` of the product to perform action with. Has example value.
    

### Get Product [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|404   |not_found|When product not exist.|

 
+ Request

    + Headers

            Authorization : Bearer {token}                  
        
+ Response 200 (application/json)

    + Body                                 

            {
                "id": "{productIDParameter}",
                "price": 1,
                "currency": "eur",
                "href": "resource uri"
                "type": "FromApiary"
            }

### Update Product [PUT]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|404   |not_found|When product not exist.|
|422   |invalid_entity|JSON doesn't correspond to Product or is empty|
 
+ Request (application/json)
    + Headers

            Authorization : Bearer {token}                  

    + Body
    
            {
                "id": {productIDParameter},
                "price": 2,
                "currency" : "dol",
                "href" : "2 resource uri"
            }
        
+ Response 204 



### Remove a Product [DELETE]
+ Request
    + Headers

            Authorization : Bearer {token}     

+ Response 204


# Group Order
API for start and administrate user orders

## Create [/v1.0/order]
### Create a new Order [POST]
Header response Location: http://ec.int.bqreaders.com/v1.0/order/{newId}

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|400|bad_request|Order request bad formed|
|403  |fobidden|If the access_token is not associated with any user|
+ Request (application/json)
    + Headers

            Authorization : Bearer {token}                  

    + Body
    
            { "productIds": ["productId1"] }

+ Response 201
            

## Read update and delete [/v1.0/order/{orderIDParameter}]
A single Order object

+ Parameters
    + orderIDParameter (required, string, `Id1`) ... String `id` of the Order to perform action with. Has example value.

### Retrieve a Order [GET]
###Errors###
|Status|Error|Description|
|------|-----|-----------|
|404  |not_found|Order not found|
|403  |fobidden|If the access_token is not associated with any user|

+ Request
    + Headers

            Authorization : Bearer {token}    
            
+ Response 200 (application/json)

        {"id": "{orderIDParameter}", "productIds":["productId1"]}

### Update a Order [PUT]
###Errors###
|Status|Error|Description|
|------|-----|-----------|
|400|bad_request|Order request bad formed|
|404  |not_found|Order not found|
|403  |fobidden|If the access_token is not associated with any user|

+ Request (application/json)
    + Headers

            Authorization : Bearer {token}                  

    + Body
    
            {"productIds":["productId1", "productId3"]}
    
+ Response 204
